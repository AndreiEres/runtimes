name: Create Draft Release

on:
  push:
    paths:
    - 'CHANGELOG'
  workflow_dispatch:


jobs:
  build-runtimes:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        relay:  ["polkadot", "kusama", "parachains", "metrics"]
        asset-hubs: ["polkadot", "kusama"]
        bridge-hubs: ["polkadot", "kusama"]
        collectives: ["polkadot"]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Cache relay target dir
        uses: actions/cache@v3
        with:
          path: "${{ github.workspace }}/relay/runtimes/${{ matrix.relay }}/target"
          key: srtool-target-relay-${{ matrix.relay }}-${{ github.sha }}
          restore-keys: |
            srtool-target-relay-${{ matrix.relay }}-
            srtool-target-relay-

     #- name: Cache system-parachains target dir
     #   uses: actions/cache@v3
     #   with:
     #     path: "${{ github.workspace }}/system-parachains/runtimes/system-parachains${{ matrix.system-parachains }}/target"
     #     key: srtool-target-system_parachains-${{ matrix.system-parachains }}-${{ github.sha }}
     #     restore-keys: |
     #       srtool-target-system_parachains-${{ matrix.system-parachains }}-
     #       srtool-target-system_parachains-

      - name: Build ${{ matrix.relay }} relay runtime
        id: srtool_build # todo: _relay
        uses: chevdor/srtool-actions@v0.7.0
        with:
          tag: 1.66.1
          #image: coderobe/srtool-nightly # todo: this is not a prod image
          chain: ${{ matrix.relay }}
          runtime_dir: "relay/runtimes/${{ matrix.relay }}"

      #- name: Build ${{ matrix.system-parachains }} system-parachains runtime
      #  id: srtool_build_system-parachains
      #  uses: chevdor/srtool-actions@v0.7.0
      #  with:
      #    tag: 1.66.1
      #    #image: coderobe/srtool-nightly # todo: this is not a prod image
      #    chain: ${{ matrix.system-parachains }}
      #    runtime_dir: "system-parachains/runtimes/${{ matrix.system-parachains }}"

      - name: Store srtool digest to disk
        run: |
          echo '${{ steps.srtool_build.outputs.json }}' | jq > ${{ matrix.runtime }}_srtool_output.json

      - name: Upload ${{ matrix.relay }} relay srtool json
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.relay }}-srtool-json
          path: ${{ matrix.relay }}_srtool_output.json

      #- name: Upload ${{ matrix.system-parachains }} system-parachains srtool json
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: ${{ matrix.system-parachains }}-srtool-json
      #    path: ${{ matrix.system-parachains }}_srtool_output.json

      - name: Upload ${{ matrix.relay }} relay runtime
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.relay }}-runtime
          path: |
            ${{ steps.srtool_build.outputs.wasm_compressed }}

      #- name: Upload ${{ matrix.system-parachains }} system-parachains runtime
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: ${{ matrix.system-parachains }}-runtime
      #    path: |
      #      ${{ steps.srtool_build.outputs.wasm_compressed }}


  publish-draft-release:
    runs-on: ubuntu-latest
    needs: ["build-runtimes"]
    outputs:
      release_url: ${{ steps.create-release.outputs.html_url }}
      asset_upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: polkadot

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.0

      - name: Download srtool json output
        uses: actions/download-artifact@v3

      - name: Archive context output
        uses: actions/upload-artifact@v3
        with:
          name: release-notes-context
          path: |
            **/*_srtool_output.json

      - name: Create draft release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Runtimes ${{ github.ref }}
          draft: true
