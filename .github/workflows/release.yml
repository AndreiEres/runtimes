name: Create Draft Release

on:
  push:
    paths:
    - 'CHANGELOG'
  workflow_dispatch:


jobs:
  build-runtimes:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [
          # relay/para, runtime path, package name, chain
          ["relay", "polkadot", "polkadot-runtime", "polkadot"],
          ["system-parachains", "collectives/collectives-polkadot", "collectives-polkadot-runtime", "collectives-polkadot"],
          ["system-parachains", "asset-hubs/asset-hub-polkadot", "statemint-runtime", "statemint"]
        ]
        #relay:  ["polkadot", "kusama"] #, "parachains", "metrics"]
        #asset-hubs: ["polkadot", "kusama"]
        #bridge-hubs: ["polkadot", "kusama"]
        #collectives: ["polkadot"]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Cache ${{ matrix.runtime[3] }} target dir
        uses: actions/cache@v3
        with:
          path: "${{ github.workspace }}/${{ matrix.runtime[0] }}/runtimes/${{ matrix.runtime[1] }}/target"
          key: srtool-target-${{ matrix.runtime[0] }}-${{ matrix.runtime[2] }}-${{ github.sha }}
          restore-keys: |
            srtool-target-${{ matrix.runtime[0] }}-${{ matrix.runtime[2] }}-
            srtool-target-${{ matrix.runtime[0] }}-

      - name: Build ${{ matrix.runtime[0] }} ${{ matrix.runtime[2] }}
        id: srtool_build # todo: _relay
        uses: chevdor/srtool-actions@v0.7.0
        with:
          tag: 1.66.1
          #image: coderobe/srtool-nightly # todo: this is not a prod image
          chain: ${{ matrix.runtime[3] }}
          package: ${{ matrix.runtime[2] }}
          runtime_dir: "${{ matrix.runtime[0] }}/runtimes/${{ matrix.runtime[1] }}"

      - name: Store ${{ matrix.runtime[3] }} srtool digest to disk
        run: |
          echo '${{ steps.srtool_build.outputs.json }}' | jq > ${{ matrix.runtime[3] }}_srtool_output.json

      - name: Upload ${{ matrix.runtime[3] }} srtool json
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.runtime[3] }}-srtool-json
          path: ${{ matrix.runtime[3] }}_srtool_output.json

      - name: Upload  ${{ matrix.runtime[3] }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.runtime[3] }}
          path: |
            ${{ steps.srtool_build.outputs.wasm_compressed }}

  publish-draft-release:
    runs-on: ubuntu-latest
    needs: ["build-runtimes"]
    outputs:
      release_url: ${{ steps.create-release.outputs.html_url }}
      asset_upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: polkadot

      - name: Download srtool json output
        uses: actions/download-artifact@v3

      - name: Archive context output
        uses: actions/upload-artifact@v3
        with:
          name: release-notes-context
          path: |
            **/*_srtool_output.json

      - name: Create draft release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Runtimes ${{ github.ref }}
          draft: true

  publish-runtimes:
    runs-on: ubuntu-latest
    needs: ["publish-draft-release"]
    env:
      RUNTIME_DIR: runtime
    strategy:
      matrix:
        runtime: ["polkadot", "kusama"]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Upload compressed ${{ matrix.runtime[3] }} wasm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.publish-draft-release.outputs.asset_upload_url }}
          asset_path: "${{ matrix.runtime[3] }}/*.compact.compressed.wasm"
          asset_name: ${{ matrix.runtime[2] }}.compact.compressed.wasm # TODO: add spec version to filename
          asset_content_type: application/wasm
